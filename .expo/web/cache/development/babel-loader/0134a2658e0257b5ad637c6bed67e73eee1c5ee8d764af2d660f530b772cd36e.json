{"ast":null,"code":"import * as React from 'react';\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport TaskComponent from \"./component/TaskComponent\";\nimport ResultComponent from \"./component/ResultComponent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: 'center',\n      backgroundColor: '#f8ebff'\n    },\n    header: {\n      fontSize: 24,\n      fontWeight: 'bold',\n      textAlign: 'center',\n      color: '#494453',\n      marginTop: 150,\n      marginBottom: 100\n    },\n    buttonContainer: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      width: '80%'\n    }\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Begin your path to learning English\"\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        title: \"Word practice\",\n        onPress: function onPress() {\n          return navigation.navigate('Word Practice', {\n            taskT: \"words\"\n          });\n        },\n        style: styles.button\n      }), _jsx(Button, {\n        title: \"Riddles\",\n        onPress: function onPress() {\n          return navigation.navigate('Riddles', {\n            taskT: \"riddles\"\n          });\n        },\n        style: [styles.button, {\n          marginTop: 100\n        }]\n      })]\n    })]\n  });\n}\nvar Stack = createNativeStackNavigator();\nfunction LogoTitle() {\n  return _jsx(Image, {\n    style: {\n      width: 50,\n      height: 50\n    },\n    source: 'https://i.pinimg.com/564x/12/f0/e9/12f0e96fb41bc7e972708e3a6bcceceb.jpg'\n  });\n}\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: '#0088ff'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: 'Home'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Word Practice\",\n        component: TaskComponent,\n        initialParams: {\n          itemId: 42\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Riddles\",\n        component: TaskComponent,\n        initialParams: {\n          itemId: 42\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Results\",\n        component: ResultComponent,\n        options: {\n          headerLeft: null\n        }\n      })]\n    })\n  });\n}\nexport default App;","map":{"version":3,"names":["React","useState","View","Text","Button","Image","TextInput","StyleSheet","NavigationContainer","createNativeStackNavigator","TaskComponent","ResultComponent","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","styles","create","container","flex","alignItems","backgroundColor","header","fontSize","fontWeight","textAlign","color","marginTop","marginBottom","buttonContainer","flexDirection","justifyContent","width","style","children","title","onPress","navigate","taskT","button","Stack","LogoTitle","height","source","App","Navigator","initialRouteName","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","name","component","options","initialParams","itemId","headerLeft"],"sources":["C:/Users/12art/Desktop/konstruktors/EnglishApp_mobile_technology_courswork/App.js"],"sourcesContent":["import * as React from 'react';\r\nimport {useState} from 'react';\r\nimport { View, Text, Button, Image, TextInput, StyleSheet } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nimport TaskComponent from './component/TaskComponent';\r\nimport ResultComponent from './component/ResultComponent';\r\n\r\n\r\nfunction HomeScreen({navigation}) {\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      alignItems: 'center',\r\n      \r\n      backgroundColor: '#f8ebff',\r\n    },\r\n    header: {\r\n      fontSize: 24,\r\n      fontWeight: 'bold',\r\n      textAlign: 'center',\r\n      color: '#494453',\r\n      marginTop: 150,\r\n      marginBottom: 100,\r\n    },\r\n    buttonContainer: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      width: '80%',\r\n    }\r\n    \r\n  });\r\n  return (\r\n    <View style={styles.container}>\r\n      \r\n      <Text style={styles.header}>Begin your path to learning English</Text>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <Button\r\n          title=\"Word practice\"\r\n          onPress={() => navigation.navigate('Word Practice', {taskT: \"words\"})}\r\n          style={styles.button}\r\n        />\r\n        <Button\r\n          title=\"Riddles\"\r\n          onPress={() => navigation.navigate('Riddles', {taskT: \"riddles\"})}\r\n          style={[styles.button, { marginTop: 100 }]}\r\n        />\r\n      </View>\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction LogoTitle() {\r\n  \r\n  return (\r\n    <Image\r\n      style={{ width: 50, height: 50 }}\r\n      source={'https://i.pinimg.com/564x/12/f0/e9/12f0e96fb41bc7e972708e3a6bcceceb.jpg'}\r\n    />\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Home\"\r\n        screenOptions={{\r\n          headerStyle: {\r\n            backgroundColor: '#0088ff',\r\n          },\r\n          headerTintColor: '#fff',\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n          },\r\n        }}\r\n      \r\n      >\r\n\r\n\r\n\r\n        <Stack.Screen \r\n          name=\"Home\" \r\n          component={HomeScreen}\r\n          options={{ title: 'Home' }} />\r\n        <Stack.Screen \r\n          name=\"Word Practice\" \r\n          component={TaskComponent}\r\n          initialParams={{ itemId: 42 }} />\r\n        <Stack.Screen \r\n          name=\"Riddles\" \r\n          component={TaskComponent}\r\n          initialParams={{ itemId: 42 }} />\r\n        <Stack.Screen \r\n          name='Results'\r\n          component={ResultComponent}\r\n          options={{ headerLeft: null }}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}