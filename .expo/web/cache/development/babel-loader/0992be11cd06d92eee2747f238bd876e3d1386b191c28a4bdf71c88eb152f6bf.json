{"ast":null,"code":"import * as React from 'react';\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Tasks from \"./component/Tasks\";\nimport TaskComponent from \"./component/TaskComponent\";\nimport ResultComponent from \"./component/ResultComponent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Begin your path to learning English\"\n    }), _jsx(Button, {\n      title: \"Word practice\",\n      onPress: function onPress() {\n        return navigation.navigate('Word Practice');\n      }\n    })]\n  });\n}\nfunction WordPractScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(TaskComponent, {}), \"console.log(word);\"]\n  });\n}\nvar Stack = createNativeStackNavigator();\nfunction LogoTitle() {\n  return _jsx(Image, {\n    style: {\n      width: 50,\n      height: 50\n    },\n    source: 'https://i.pinimg.com/564x/12/f0/e9/12f0e96fb41bc7e972708e3a6bcceceb.jpg'\n  });\n}\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: '#f4511e'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: 'Home'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Word Practice\",\n        component: WordPractScreen,\n        initialParams: {\n          itemId: 42\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Results\",\n        component: ResultComponent\n      })]\n    })\n  });\n}\nexport default App;","map":{"version":3,"names":["React","useState","View","Text","Button","Image","TextInput","NavigationContainer","createNativeStackNavigator","Tasks","TaskComponent","ResultComponent","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","style","flex","alignItems","justifyContent","children","title","onPress","navigate","WordPractScreen","_ref2","Stack","LogoTitle","width","height","source","App","Navigator","initialRouteName","screenOptions","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","Screen","name","component","options","initialParams","itemId"],"sources":["C:/Users/12art/Desktop/myEnglishApp/myEnglishApp/App.js"],"sourcesContent":["import * as React from 'react';\nimport {useState} from 'react';\nimport { View, Text, Button, Image, TextInput } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Tasks from './component/Tasks';\nimport TaskComponent from './component/TaskComponent';\nimport ResultComponent from './component/ResultComponent';\n\n\nfunction HomeScreen({navigation}) {\n  \n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      \n      <Text>Begin your path to learning English</Text>\n        <Button\n        title=\"Word practice\"\n        onPress={() => navigation.navigate('Word Practice')}\n        />\n    </View>\n  );\n}\n\n//const [content, setContent] = useState()\n\n\n\nfunction WordPractScreen({navigation}) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      \n      <TaskComponent></TaskComponent>\n      console.log(word);\n    </View>\n    \n  );\n}\n\n\n\nconst Stack = createNativeStackNavigator();\n\nfunction LogoTitle() {\n  \n  return (\n    <Image\n      style={{ width: 50, height: 50 }}\n      source={'https://i.pinimg.com/564x/12/f0/e9/12f0e96fb41bc7e972708e3a6bcceceb.jpg'}\n    />\n  );\n}\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\"\n        screenOptions={{\n          headerStyle: {\n            backgroundColor: '#f4511e',\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n          },\n        }}\n      \n      >\n\n\n\n        <Stack.Screen \n          name=\"Home\" \n          component={HomeScreen}\n          options={{ title: 'Home' }} />\n        <Stack.Screen \n          name=\"Word Practice\" \n          component={WordPractScreen}\n          initialParams={{ itemId: 42 }} />\n        <Stack.Screen \n          name='Results'\n          component={ResultComponent}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAE/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,KAAK;AACZ,OAAOC,aAAa;AACpB,OAAOC,eAAe;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1D,SAASC,UAAUA,CAAAC,IAAA,EAAe;EAAA,IAAbC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAE7B,OACEH,KAAA,CAACb,IAAI;IAACiB,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GAEvEV,IAAA,CAACV,IAAI;MAAAoB,QAAA,EAAC;IAAmC,EAAO,EAC9CV,IAAA,CAACT,MAAM;MACPoB,KAAK,EAAC,eAAe;MACrBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMP,UAAU,CAACQ,QAAQ,CAAC,eAAe,CAAC;MAAA;IAAC,EAClD;EAAA,EACC;AAEX;AAMA,SAASC,eAAeA,CAAAC,KAAA,EAAe;EAAA,IAAbV,UAAU,GAAAU,KAAA,CAAVV,UAAU;EAClC,OACEH,KAAA,CAACb,IAAI;IAACiB,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GAEvEV,IAAA,CAACH,aAAa,KAAiB,sBAEjC;EAAA,EAAO;AAGX;AAIA,IAAMmB,KAAK,GAAGrB,0BAA0B,EAAE;AAE1C,SAASsB,SAASA,CAAA,EAAG;EAEnB,OACEjB,IAAA,CAACR,KAAK;IACJc,KAAK,EAAE;MAAEY,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAE;IACjCC,MAAM,EAAE;EAA0E,EAClF;AAEN;AAEA,SAASC,GAAGA,CAAA,EAAG;EACb,OACErB,IAAA,CAACN,mBAAmB;IAAAgB,QAAA,EAClBR,KAAA,CAACc,KAAK,CAACM,SAAS;MAACC,gBAAgB,EAAC,MAAM;MACtCC,aAAa,EAAE;QACbC,WAAW,EAAE;UACXC,eAAe,EAAE;QACnB,CAAC;QACDC,eAAe,EAAE,MAAM;QACvBC,gBAAgB,EAAE;UAChBC,UAAU,EAAE;QACd;MACF,CAAE;MAAAnB,QAAA,GAMFV,IAAA,CAACgB,KAAK,CAACc,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAE7B,UAAW;QACtB8B,OAAO,EAAE;UAAEtB,KAAK,EAAE;QAAO;MAAE,EAAG,EAChCX,IAAA,CAACgB,KAAK,CAACc,MAAM;QACXC,IAAI,EAAC,eAAe;QACpBC,SAAS,EAAElB,eAAgB;QAC3BoB,aAAa,EAAE;UAAEC,MAAM,EAAE;QAAG;MAAE,EAAG,EACnCnC,IAAA,CAACgB,KAAK,CAACc,MAAM;QACXC,IAAI,EAAC,SAAS;QACdC,SAAS,EAAElC;MAAgB,EAC3B;IAAA;EACc,EACE;AAE1B;AAEA,eAAeuB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}