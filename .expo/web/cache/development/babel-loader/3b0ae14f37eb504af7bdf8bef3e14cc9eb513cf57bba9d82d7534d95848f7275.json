{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Tasks from \"./component/Tasks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Begin your path to learning English\"\n    }), _jsx(Button, {\n      title: \"Word practice\",\n      onPress: function onPress() {\n        return navigation.navigate('Word Practice');\n      }\n    })]\n  });\n}\nvar _useState = useState(''),\n  _useState2 = _slicedToArray(_useState, 2),\n  inputVal = _useState2[0],\n  setInputVal = _useState2[1];\nvar handleInputChange = function handleInputChange(text) {\n  setInputVal(text);\n};\nvar handleSubmit = function handleSubmit() {\n  console.log(inputValue);\n};\nfunction WordPractScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Tasks, {}), _jsx(TextInput, {\n      placeholder: \"Translate this word to english\",\n      value: inputVal\n    }), _jsx(Button, {\n      title: \"Submit answer\",\n      onPress: handleSubmit\n    })]\n  });\n}\nvar Stack = createNativeStackNavigator();\nfunction LogoTitle() {\n  return _jsx(Image, {\n    style: {\n      width: 50,\n      height: 50\n    },\n    source: 'https://i.pinimg.com/564x/12/f0/e9/12f0e96fb41bc7e972708e3a6bcceceb.jpg'\n  });\n}\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: '#f4511e'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: 'Home'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Word Practice\",\n        component: WordPractScreen,\n        initialParams: {\n          itemId: 42\n        }\n      })]\n    })\n  });\n}\nexport default App;","map":{"version":3,"names":["React","View","Text","Button","Image","TextInput","NavigationContainer","createNativeStackNavigator","Tasks","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","style","flex","alignItems","justifyContent","children","title","onPress","navigate","_useState","useState","_useState2","_slicedToArray","inputVal","setInputVal","handleInputChange","text","handleSubmit","console","log","inputValue","WordPractScreen","_ref2","placeholder","value","Stack","LogoTitle","width","height","source","App","Navigator","initialRouteName","screenOptions","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","Screen","name","component","options","initialParams","itemId"],"sources":["C:/Users/12art/Desktop/myEnglishApp/myEnglishApp/App.js"],"sourcesContent":["import * as React from 'react';\nimport { View, Text, Button, Image, TextInput } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Tasks from './component/Tasks';\n\n\nfunction HomeScreen({navigation}) {\n  \n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      \n      <Text>Begin your path to learning English</Text>\n        <Button\n        title=\"Word practice\"\n        onPress={() => navigation.navigate('Word Practice')}\n        />\n    </View>\n  );\n}\n\n//const [content, setContent] = useState()\n\nconst [inputVal, setInputVal] = useState('');\nconst handleInputChange = (text) => {\n  setInputVal(text);\n}\n//check inputed word\nconst handleSubmit = () => {\n  // Do something with the input value, e.g. send it to a server\n  console.log(inputValue);\n}\n\nfunction WordPractScreen({navigation}) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Tasks />\n      <TextInput \n        placeholder='Translate this word to english'\n        value={inputVal}\n      />\n      <Button\n        title=\"Submit answer\"\n        onPress={handleSubmit}\n      />\n    </View>\n    \n  );\n}\n\nconst Stack = createNativeStackNavigator();\n\nfunction LogoTitle() {\n  \n  return (\n    <Image\n      style={{ width: 50, height: 50 }}\n      source={'https://i.pinimg.com/564x/12/f0/e9/12f0e96fb41bc7e972708e3a6bcceceb.jpg'}\n    />\n  );\n}\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\"\n        screenOptions={{\n          headerStyle: {\n            backgroundColor: '#f4511e',\n          },\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n          },\n        }}\n      \n      >\n\n\n\n        <Stack.Screen \n          name=\"Home\" \n          component={HomeScreen}\n          options={{ title: 'Home' }} />\n        <Stack.Screen \n          name=\"Word Practice\" \n          component={WordPractScreen}\n          initialParams={{ itemId: 42 }} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}