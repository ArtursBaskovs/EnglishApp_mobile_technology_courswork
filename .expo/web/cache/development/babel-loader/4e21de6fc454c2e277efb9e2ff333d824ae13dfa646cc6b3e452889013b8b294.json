{"ast":null,"code":"import { stringify, parse } from 'jsan';\nimport socketCluster from 'socketcluster-client';\nimport { socketOptions } from \"./constants\";\nvar instanceName;\nvar socket;\nvar channel;\nvar shouldInit = true;\nfunction send(type, payload) {\n  setTimeout(function () {\n    var message = {\n      payload: payload ? stringify(payload) : '',\n      type: type,\n      id: socket.id,\n      name: instanceName,\n      init: shouldInit\n    };\n    if (shouldInit) shouldInit = false;\n    socket.emit(socket.id ? 'log' : 'log-noid', message);\n  }, 0);\n}\nfunction handleMessages(message) {}\nfunction init(options) {\n  if (channel) channel.unwatch();\n  if (socket) socket.disconnect();\n  if (options && options.port && !options.hostname) {\n    options.hostname = 'localhost';\n  }\n  socket = socketCluster.connect(options && options.port ? options : socketOptions);\n  socket.on('error', function (err) {\n    console.warn(err);\n  });\n  socket.emit('login', 'master', function (err, channelName) {\n    if (err) {\n      console.error(err);\n      return;\n    }\n    channel = socket.subscribe(channelName);\n    channel.watch(handleMessages);\n    socket.on(channelName, handleMessages);\n  });\n  if (options) instanceName = options.name;\n}\nexport default {\n  init: init,\n  send: send\n};","map":{"version":3,"names":["stringify","parse","socketCluster","socketOptions","instanceName","socket","channel","shouldInit","send","type","payload","setTimeout","message","id","name","init","emit","handleMessages","options","unwatch","disconnect","port","hostname","connect","on","err","console","warn","channelName","error","subscribe","watch"],"sources":["C:/Users/12art/Desktop/konstruktors/EnglishApp_mobile_technology_courswork/node_modules/react-native-log/src/websocket.js"],"sourcesContent":["import { stringify, parse } from 'jsan';\nimport socketCluster from 'socketcluster-client';\nimport { socketOptions } from './constants';\n\nlet instanceName;\nlet socket;\nlet channel;\nlet shouldInit = true;\n\nfunction send(type, payload) {\n  setTimeout(() => {\n    const message = {\n      payload: payload ? stringify(payload) : '',\n      type,\n      id: socket.id,\n      name: instanceName,\n      init: shouldInit\n    };\n    if (shouldInit) shouldInit = false;\n    socket.emit(socket.id ? 'log' : 'log-noid', message);\n  }, 0);\n}\n\nfunction handleMessages(message) {\n}\n\nfunction init(options) {\n  if (channel) channel.unwatch();\n  if (socket) socket.disconnect();\n  if (options && options.port && !options.hostname) {\n    options.hostname = 'localhost';\n  }\n  socket = socketCluster.connect(options && options.port ? options : socketOptions);\n\n  socket.on('error', function (err) {\n    console.warn(err);\n  });\n\n  socket.emit('login', 'master', (err, channelName) => {\n    if (err) { console.error(err); return; }\n    channel = socket.subscribe(channelName);\n    channel.watch(handleMessages);\n    socket.on(channelName, handleMessages);\n  });\n  if (options) instanceName = options.name;\n}\n\nexport default {\n  init,\n  send\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,MAAM;AACvC,OAAOC,aAAa,MAAM,sBAAsB;AAChD,SAASC,aAAa;AAEtB,IAAIC,YAAY;AAChB,IAAIC,MAAM;AACV,IAAIC,OAAO;AACX,IAAIC,UAAU,GAAG,IAAI;AAErB,SAASC,IAAIA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC3BC,UAAU,CAAC,YAAM;IACf,IAAMC,OAAO,GAAG;MACdF,OAAO,EAAEA,OAAO,GAAGV,SAAS,CAACU,OAAO,CAAC,GAAG,EAAE;MAC1CD,IAAI,EAAJA,IAAI;MACJI,EAAE,EAAER,MAAM,CAACQ,EAAE;MACbC,IAAI,EAAEV,YAAY;MAClBW,IAAI,EAAER;IACR,CAAC;IACD,IAAIA,UAAU,EAAEA,UAAU,GAAG,KAAK;IAClCF,MAAM,CAACW,IAAI,CAACX,MAAM,CAACQ,EAAE,GAAG,KAAK,GAAG,UAAU,EAAED,OAAO,CAAC;EACtD,CAAC,EAAE,CAAC,CAAC;AACP;AAEA,SAASK,cAAcA,CAACL,OAAO,EAAE,CACjC;AAEA,SAASG,IAAIA,CAACG,OAAO,EAAE;EACrB,IAAIZ,OAAO,EAAEA,OAAO,CAACa,OAAO,EAAE;EAC9B,IAAId,MAAM,EAAEA,MAAM,CAACe,UAAU,EAAE;EAC/B,IAAIF,OAAO,IAAIA,OAAO,CAACG,IAAI,IAAI,CAACH,OAAO,CAACI,QAAQ,EAAE;IAChDJ,OAAO,CAACI,QAAQ,GAAG,WAAW;EAChC;EACAjB,MAAM,GAAGH,aAAa,CAACqB,OAAO,CAACL,OAAO,IAAIA,OAAO,CAACG,IAAI,GAAGH,OAAO,GAAGf,aAAa,CAAC;EAEjFE,MAAM,CAACmB,EAAE,CAAC,OAAO,EAAE,UAAUC,GAAG,EAAE;IAChCC,OAAO,CAACC,IAAI,CAACF,GAAG,CAAC;EACnB,CAAC,CAAC;EAEFpB,MAAM,CAACW,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,UAACS,GAAG,EAAEG,WAAW,EAAK;IACnD,IAAIH,GAAG,EAAE;MAAEC,OAAO,CAACG,KAAK,CAACJ,GAAG,CAAC;MAAE;IAAQ;IACvCnB,OAAO,GAAGD,MAAM,CAACyB,SAAS,CAACF,WAAW,CAAC;IACvCtB,OAAO,CAACyB,KAAK,CAACd,cAAc,CAAC;IAC7BZ,MAAM,CAACmB,EAAE,CAACI,WAAW,EAAEX,cAAc,CAAC;EACxC,CAAC,CAAC;EACF,IAAIC,OAAO,EAAEd,YAAY,GAAGc,OAAO,CAACJ,IAAI;AAC1C;AAEA,eAAe;EACbC,IAAI,EAAJA,IAAI;EACJP,IAAI,EAAJA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}