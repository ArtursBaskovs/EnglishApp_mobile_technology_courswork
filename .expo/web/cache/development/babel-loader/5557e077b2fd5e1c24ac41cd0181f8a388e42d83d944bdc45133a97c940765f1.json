{"ast":null,"code":"\"use strict\";\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sentryTransport = exports.fileAsyncTransport = exports.mapConsoleTransport = exports.consoleTransport = exports.logger = void 0;\nvar consoleTransport_1 = require(\"./transports/consoleTransport\");\nObject.defineProperty(exports, \"consoleTransport\", {\n  enumerable: true,\n  get: function get() {\n    return consoleTransport_1.consoleTransport;\n  }\n});\nvar mapConsoleTransport_1 = require(\"./transports/mapConsoleTransport\");\nObject.defineProperty(exports, \"mapConsoleTransport\", {\n  enumerable: true,\n  get: function get() {\n    return mapConsoleTransport_1.mapConsoleTransport;\n  }\n});\nvar fileAsyncTransport_1 = require(\"./transports/fileAsyncTransport\");\nObject.defineProperty(exports, \"fileAsyncTransport\", {\n  enumerable: true,\n  get: function get() {\n    return fileAsyncTransport_1.fileAsyncTransport;\n  }\n});\nvar sentryTransport_1 = require(\"./transports/sentryTransport\");\nObject.defineProperty(exports, \"sentryTransport\", {\n  enumerable: true,\n  get: function get() {\n    return sentryTransport_1.sentryTransport;\n  }\n});\nvar asyncFunc = function asyncFunc(cb) {\n  setTimeout(function () {\n    return cb();\n  }, 0);\n};\nvar stringifyFunc = function stringifyFunc(msg) {\n  var stringMsg = \"\";\n  if (typeof msg === \"string\") {\n    stringMsg = msg + \" \";\n  } else if (typeof msg === \"function\") {\n    stringMsg = \"[function] \";\n  } else if (msg && msg.stack && msg.message) {\n    stringMsg = msg.message + \" \";\n  } else {\n    try {\n      stringMsg = \"\\n\" + JSON.stringify(msg, undefined, 2) + \"\\n\";\n    } catch (error) {\n      stringMsg += \"Undefined Message\";\n    }\n  }\n  return stringMsg;\n};\nvar reservedKey = [\"extend\", \"enable\", \"disable\", \"getExtensions\", \"setSeverity\", \"getSeverity\", \"patchConsole\", \"getOriginalConsole\"];\nvar defaultLogger = {\n  severity: \"debug\",\n  transport: consoleTransport_1.consoleTransport,\n  transportOptions: {},\n  levels: {\n    debug: 0,\n    info: 1,\n    warn: 2,\n    error: 3\n  },\n  async: false,\n  asyncFunc: asyncFunc,\n  stringifyFunc: stringifyFunc,\n  printLevel: true,\n  printDate: true,\n  dateFormat: \"time\",\n  enabled: true,\n  enabledExtensions: null,\n  printFileLine: false,\n  fileLineOffset: 0\n};\nvar logs = _createClass(function logs(config) {\n  var _this2 = this;\n  _classCallCheck(this, logs);\n  var _a;\n  this._enabledExtensions = null;\n  this._extensions = [];\n  this._extendedLogs = {};\n  this._log = function (level, extension) {\n    for (var _len = arguments.length, msgs = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      msgs[_key - 2] = arguments[_key];\n    }\n    if (_this2._async) {\n      return _this2._asyncFunc(function () {\n        _this2._sendToTransport(level, extension, msgs);\n      });\n    } else {\n      return _this2._sendToTransport(level, extension, msgs);\n    }\n  };\n  this._sendToTransport = function (level, extension, msgs) {\n    if (!_this2._enabled) return false;\n    if (!_this2._isLevelEnabled(level)) {\n      return false;\n    }\n    if (extension && !_this2._isExtensionEnabled(extension)) {\n      return false;\n    }\n    var msg = _this2._formatMsg(level, extension, msgs);\n    var transportProps = {\n      msg: msg,\n      rawMsg: msgs,\n      level: {\n        severity: _this2._levels[level],\n        text: level\n      },\n      extension: extension,\n      options: _this2._transportOptions\n    };\n    if (Array.isArray(_this2._transport)) {\n      for (var i = 0; i < _this2._transport.length; i++) {\n        _this2._transport[i](transportProps);\n      }\n    } else {\n      _this2._transport(transportProps);\n    }\n    return true;\n  };\n  this._stringifyMsg = function (msg) {\n    return _this2._stringifyFunc(msg);\n  };\n  this._formatMsg = function (level, extension, msgs) {\n    var nameTxt = \"\";\n    if (extension) {\n      nameTxt = extension + \" | \";\n    }\n    var dateTxt = \"\";\n    if (_this2._printDate) {\n      if (typeof _this2._dateFormat === \"string\") {\n        switch (_this2._dateFormat) {\n          case \"time\":\n            dateTxt = new Date().toLocaleTimeString() + \" | \";\n            break;\n          case \"local\":\n            dateTxt = new Date().toLocaleString() + \" | \";\n            break;\n          case \"utc\":\n            dateTxt = new Date().toUTCString() + \" | \";\n            break;\n          case \"iso\":\n            dateTxt = new Date().toISOString() + \" | \";\n            break;\n          default:\n            break;\n        }\n      } else if (typeof _this2._dateFormat === \"function\") {\n        dateTxt = _this2._dateFormat(new Date());\n      }\n    }\n    var levelTxt = \"\";\n    if (_this2._printLevel) {\n      levelTxt = level.toUpperCase() + \" : \";\n    }\n    var stringMsg = dateTxt + nameTxt + levelTxt;\n    if (Array.isArray(msgs)) {\n      for (var i = 0; i < msgs.length; ++i) {\n        stringMsg += _this2._stringifyMsg(msgs[i]);\n      }\n    } else {\n      stringMsg += _this2._stringifyMsg(msgs);\n    }\n    return stringMsg;\n  };\n  this._isLevelEnabled = function (level) {\n    if (_this2._levels[level] < _this2._levels[_this2._level]) {\n      return false;\n    }\n    return true;\n  };\n  this._isExtensionEnabled = function (extension) {\n    if (!_this2._enabledExtensions) {\n      return true;\n    }\n    if (_this2._enabledExtensions.includes(extension)) {\n      return true;\n    }\n    return false;\n  };\n  this.extend = function (extension) {\n    if (extension === \"console\") {\n      throw Error(\"[react-native-logs:extend] ERROR: you cannot set [console] as extension, use patchConsole instead\");\n    }\n    if (_this2._extensions.includes(extension)) {\n      return _this2._extendedLogs[extension];\n    }\n    _this2._extendedLogs[extension] = {};\n    _this2._extensions.push(extension);\n    var extendedLog = _this2._extendedLogs[extension];\n    Object.keys(_this2._levels).forEach(function (level) {\n      extendedLog[level] = function () {\n        for (var _len2 = arguments.length, msgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          msgs[_key2] = arguments[_key2];\n        }\n        _this2._log.apply(_this2, [level, extension].concat(msgs));\n      };\n      extendedLog[\"extend\"] = function (extension) {\n        throw Error(\"[react-native-logs] ERROR: you cannot extend a logger from an already extended logger\");\n      };\n      extendedLog[\"enable\"] = function () {\n        throw Error(\"[react-native-logs] ERROR: You cannot enable a logger from extended logger\");\n      };\n      extendedLog[\"disable\"] = function () {\n        throw Error(\"[react-native-logs] ERROR: You cannot disable a logger from extended logger\");\n      };\n      extendedLog[\"getExtensions\"] = function () {\n        throw Error(\"[react-native-logs] ERROR: You cannot get extensions from extended logger\");\n      };\n      extendedLog[\"setSeverity\"] = function (level) {\n        throw Error(\"[react-native-logs] ERROR: You cannot set severity from extended logger\");\n      };\n      extendedLog[\"getSeverity\"] = function () {\n        throw Error(\"[react-native-logs] ERROR: You cannot get severity from extended logger\");\n      };\n      extendedLog[\"patchConsole\"] = function () {\n        throw Error(\"[react-native-logs] ERROR: You cannot patch console from extended logger\");\n      };\n      extendedLog[\"getOriginalConsole\"] = function () {\n        throw Error(\"[react-native-logs] ERROR: You cannot get original console from extended logger\");\n      };\n    });\n    return extendedLog;\n  };\n  this.enable = function (extension) {\n    if (!extension) {\n      _this2._enabled = true;\n      return true;\n    }\n    if (_this2._extensions.includes(extension)) {\n      if (_this2._enabledExtensions) {\n        if (!_this2._enabledExtensions.includes(extension)) {\n          _this2._enabledExtensions.push(extension);\n          return true;\n        } else {\n          return true;\n        }\n      } else {\n        _this2._enabledExtensions = [];\n        _this2._enabledExtensions.push(extension);\n        return true;\n      }\n    } else {\n      throw Error(\"[react-native-logs:enable] ERROR: Extension [\" + extension + \"] not exist\");\n    }\n  };\n  this.disable = function (extension) {\n    if (!extension) {\n      _this2._enabled = false;\n      return true;\n    }\n    if (_this2._extensions.includes(extension)) {\n      if (_this2._enabledExtensions) {\n        var extIndex = _this2._enabledExtensions.indexOf(extension);\n        if (extIndex > -1) {\n          _this2._enabledExtensions.splice(extIndex, 1);\n        }\n        return true;\n      } else {\n        return true;\n      }\n    } else {\n      throw Error(\"[react-native-logs:disable] ERROR: Extension [\" + extension + \"] not exist\");\n    }\n  };\n  this.getExtensions = function () {\n    return _this2._extensions;\n  };\n  this.setSeverity = function (level) {\n    if (level in _this2._levels) {\n      _this2._level = level;\n    } else {\n      throw Error(\"[react-native-logs:setSeverity] ERROR: Level [\" + level + \"] not exist\");\n    }\n    return _this2._level;\n  };\n  this.getSeverity = function () {\n    return _this2._level;\n  };\n  this.patchConsole = function () {\n    var extension = \"console\";\n    var levelKeys = Object.keys(_this2._levels);\n    if (!_this2._originalConsole) {\n      _this2._originalConsole = console;\n    }\n    if (!_this2._transportOptions.consoleFunc) {\n      _this2._transportOptions.consoleFunc = _this2._originalConsole.log;\n    }\n    console[\"log\"] = function () {\n      for (var _len3 = arguments.length, msgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        msgs[_key3] = arguments[_key3];\n      }\n      _this2._log.apply(_this2, [levelKeys[0], extension].concat(msgs));\n    };\n    levelKeys.forEach(function (level) {\n      if (console[level]) {\n        console[level] = function () {\n          for (var _len4 = arguments.length, msgs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n            msgs[_key4] = arguments[_key4];\n          }\n          _this2._log.apply(_this2, [level, extension].concat(msgs));\n        };\n      } else {\n        _this2._originalConsole && _this2._originalConsole.log(\"[react-native-logs:patchConsole] WARNING: \\\"\" + level + \"\\\" method does not exist in console and will not be available\");\n      }\n    });\n  };\n  this._levels = config.levels;\n  this._level = (_a = config.severity) !== null && _a !== void 0 ? _a : Object.keys(this._levels)[0];\n  this._transport = config.transport;\n  this._transportOptions = config.transportOptions;\n  this._asyncFunc = config.asyncFunc;\n  this._async = config.async;\n  this._stringifyFunc = config.stringifyFunc;\n  this._dateFormat = config.dateFormat;\n  this._printLevel = config.printLevel;\n  this._printDate = config.printDate;\n  this._enabled = config.enabled;\n  if (Array.isArray(config.enabledExtensions)) {\n    this._enabledExtensions = config.enabledExtensions;\n  } else if (typeof config.enabledExtensions === \"string\") {\n    this._enabledExtensions = [config.enabledExtensions];\n  }\n  var _this = this;\n  Object.keys(this._levels).forEach(function (level) {\n    if (typeof level !== \"string\") {\n      throw Error(\"[react-native-logs] ERROR: levels must be strings\");\n    }\n    if (level[0] === \"_\") {\n      throw Error(\"[react-native-logs] ERROR: keys with first char \\\"_\\\" is reserved and cannot be used as levels\");\n    }\n    if (reservedKey.indexOf(level) !== -1) {\n      throw Error(\"[react-native-logs] ERROR: [\" + level + \"] is a reserved key, you cannot set it as custom level\");\n    }\n    if (typeof _this2._levels[level] === \"number\") {\n      _this[level] = _this2._log.bind(_this2, level, null);\n    } else {\n      throw Error(\"[react-native-logs] ERROR: [\" + level + \"] wrong level config\");\n    }\n  }, this);\n});\nvar createLogger = function createLogger(config) {\n  var mergedConfig = Object.assign(Object.assign({}, defaultLogger), config);\n  return new logs(mergedConfig);\n};\nvar logger = {\n  createLogger: createLogger\n};\nexports.logger = logger;","map":{"version":3,"names":["_createClass","require","_classCallCheck","Object","defineProperty","exports","value","sentryTransport","fileAsyncTransport","mapConsoleTransport","consoleTransport","logger","consoleTransport_1","enumerable","get","mapConsoleTransport_1","fileAsyncTransport_1","sentryTransport_1","asyncFunc","cb","setTimeout","stringifyFunc","msg","stringMsg","stack","message","JSON","stringify","undefined","error","reservedKey","defaultLogger","severity","transport","transportOptions","levels","debug","info","warn","async","printLevel","printDate","dateFormat","enabled","enabledExtensions","printFileLine","fileLineOffset","logs","config","_this2","_a","_enabledExtensions","_extensions","_extendedLogs","_log","level","extension","_len","arguments","length","msgs","Array","_key","_async","_asyncFunc","_sendToTransport","_enabled","_isLevelEnabled","_isExtensionEnabled","_formatMsg","transportProps","rawMsg","_levels","text","options","_transportOptions","isArray","_transport","i","_stringifyMsg","_stringifyFunc","nameTxt","dateTxt","_printDate","_dateFormat","Date","toLocaleTimeString","toLocaleString","toUTCString","toISOString","levelTxt","_printLevel","toUpperCase","_level","includes","extend","Error","push","extendedLog","keys","forEach","_len2","_key2","apply","concat","enable","disable","extIndex","indexOf","splice","getExtensions","setSeverity","getSeverity","patchConsole","levelKeys","_originalConsole","console","consoleFunc","log","_len3","_key3","_len4","_key4","_this","bind","createLogger","mergedConfig","assign"],"sources":["C:/Users/12art/Desktop/konstruktors/EnglishApp_mobile_technology_courswork/node_modules/react-native-logs/dist/index.js"],"sourcesContent":["\"use strict\";\n/**\n * REACT-NATIVE-LOGS\n * Alessandro Bottamedi - a.bottamedi@me.com\n *\n * Performance-aware simple logger for React-Native with custom levels and transports (colored console, file writing, etc.)\n *\n * MIT license\n *\n * Copyright (c) 2021 Alessandro Bottamedi.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sentryTransport = exports.fileAsyncTransport = exports.mapConsoleTransport = exports.consoleTransport = exports.logger = void 0;\n/** Import preset transports */\nconst consoleTransport_1 = require(\"./transports/consoleTransport\");\nObject.defineProperty(exports, \"consoleTransport\", { enumerable: true, get: function () { return consoleTransport_1.consoleTransport; } });\nconst mapConsoleTransport_1 = require(\"./transports/mapConsoleTransport\");\nObject.defineProperty(exports, \"mapConsoleTransport\", { enumerable: true, get: function () { return mapConsoleTransport_1.mapConsoleTransport; } });\nconst fileAsyncTransport_1 = require(\"./transports/fileAsyncTransport\");\nObject.defineProperty(exports, \"fileAsyncTransport\", { enumerable: true, get: function () { return fileAsyncTransport_1.fileAsyncTransport; } });\nconst sentryTransport_1 = require(\"./transports/sentryTransport\");\nObject.defineProperty(exports, \"sentryTransport\", { enumerable: true, get: function () { return sentryTransport_1.sentryTransport; } });\nlet asyncFunc = (cb) => {\n    setTimeout(() => {\n        return cb();\n    }, 0);\n};\nlet stringifyFunc = (msg) => {\n    let stringMsg = \"\";\n    if (typeof msg === \"string\") {\n        stringMsg = msg + \" \";\n    }\n    else if (typeof msg === \"function\") {\n        stringMsg = \"[function] \";\n    }\n    else if (msg && msg.stack && msg.message) {\n        stringMsg = msg.message + \" \";\n    }\n    else {\n        try {\n            stringMsg = \"\\n\" + JSON.stringify(msg, undefined, 2) + \"\\n\";\n        }\n        catch (error) {\n            stringMsg += \"Undefined Message\";\n        }\n    }\n    return stringMsg;\n};\n/** Reserved key log string to avoid overwriting other methods or properties */\nconst reservedKey = [\n    \"extend\",\n    \"enable\",\n    \"disable\",\n    \"getExtensions\",\n    \"setSeverity\",\n    \"getSeverity\",\n    \"patchConsole\",\n    \"getOriginalConsole\",\n];\n/** Default configuration parameters for logger */\nconst defaultLogger = {\n    severity: \"debug\",\n    transport: consoleTransport_1.consoleTransport,\n    transportOptions: {},\n    levels: {\n        debug: 0,\n        info: 1,\n        warn: 2,\n        error: 3,\n    },\n    async: false,\n    asyncFunc: asyncFunc,\n    stringifyFunc: stringifyFunc,\n    printLevel: true,\n    printDate: true,\n    dateFormat: \"time\",\n    enabled: true,\n    enabledExtensions: null,\n    printFileLine: false,\n    fileLineOffset: 0,\n};\n/** Logger Main Class */\nclass logs {\n    constructor(config) {\n        var _a;\n        this._enabledExtensions = null;\n        this._extensions = [];\n        this._extendedLogs = {};\n        /** Log messages methods and level filter */\n        this._log = (level, extension, ...msgs) => {\n            if (this._async) {\n                return this._asyncFunc(() => {\n                    this._sendToTransport(level, extension, msgs);\n                });\n            }\n            else {\n                return this._sendToTransport(level, extension, msgs);\n            }\n        };\n        this._sendToTransport = (level, extension, msgs) => {\n            if (!this._enabled)\n                return false;\n            if (!this._isLevelEnabled(level)) {\n                return false;\n            }\n            if (extension && !this._isExtensionEnabled(extension)) {\n                return false;\n            }\n            let msg = this._formatMsg(level, extension, msgs);\n            let transportProps = {\n                msg: msg,\n                rawMsg: msgs,\n                level: { severity: this._levels[level], text: level },\n                extension: extension,\n                options: this._transportOptions,\n            };\n            if (Array.isArray(this._transport)) {\n                for (let i = 0; i < this._transport.length; i++) {\n                    this._transport[i](transportProps);\n                }\n            }\n            else {\n                this._transport(transportProps);\n            }\n            return true;\n        };\n        this._stringifyMsg = (msg) => {\n            return this._stringifyFunc(msg);\n        };\n        this._formatMsg = (level, extension, msgs) => {\n            let nameTxt = \"\";\n            if (extension) {\n                nameTxt = `${extension} | `;\n            }\n            let dateTxt = \"\";\n            if (this._printDate) {\n                if (typeof this._dateFormat === \"string\") {\n                    switch (this._dateFormat) {\n                        case \"time\":\n                            dateTxt = `${new Date().toLocaleTimeString()} | `;\n                            break;\n                        case \"local\":\n                            dateTxt = `${new Date().toLocaleString()} | `;\n                            break;\n                        case \"utc\":\n                            dateTxt = `${new Date().toUTCString()} | `;\n                            break;\n                        case \"iso\":\n                            dateTxt = `${new Date().toISOString()} | `;\n                            break;\n                        default:\n                            break;\n                    }\n                }\n                else if (typeof this._dateFormat === \"function\") {\n                    dateTxt = this._dateFormat(new Date());\n                }\n            }\n            let levelTxt = \"\";\n            if (this._printLevel) {\n                levelTxt = `${level.toUpperCase()} : `;\n            }\n            let stringMsg = dateTxt + nameTxt + levelTxt;\n            if (Array.isArray(msgs)) {\n                for (let i = 0; i < msgs.length; ++i) {\n                    stringMsg += this._stringifyMsg(msgs[i]);\n                }\n            }\n            else {\n                stringMsg += this._stringifyMsg(msgs);\n            }\n            return stringMsg;\n        };\n        /** Return true if level is enabled */\n        this._isLevelEnabled = (level) => {\n            if (this._levels[level] < this._levels[this._level]) {\n                return false;\n            }\n            return true;\n        };\n        /** Return true if extension is enabled */\n        this._isExtensionEnabled = (extension) => {\n            if (!this._enabledExtensions) {\n                return true;\n            }\n            if (this._enabledExtensions.includes(extension)) {\n                return true;\n            }\n            return false;\n        };\n        /** Extend logger with a new extension */\n        this.extend = (extension) => {\n            if (extension === \"console\") {\n                throw Error(`[react-native-logs:extend] ERROR: you cannot set [console] as extension, use patchConsole instead`);\n            }\n            if (this._extensions.includes(extension)) {\n                return this._extendedLogs[extension];\n            }\n            this._extendedLogs[extension] = {};\n            this._extensions.push(extension);\n            let extendedLog = this._extendedLogs[extension];\n            Object.keys(this._levels).forEach((level) => {\n                extendedLog[level] = (...msgs) => {\n                    this._log(level, extension, ...msgs);\n                };\n                extendedLog[\"extend\"] = (extension) => {\n                    throw Error(`[react-native-logs] ERROR: you cannot extend a logger from an already extended logger`);\n                };\n                extendedLog[\"enable\"] = () => {\n                    throw Error(`[react-native-logs] ERROR: You cannot enable a logger from extended logger`);\n                };\n                extendedLog[\"disable\"] = () => {\n                    throw Error(`[react-native-logs] ERROR: You cannot disable a logger from extended logger`);\n                };\n                extendedLog[\"getExtensions\"] = () => {\n                    throw Error(`[react-native-logs] ERROR: You cannot get extensions from extended logger`);\n                };\n                extendedLog[\"setSeverity\"] = (level) => {\n                    throw Error(`[react-native-logs] ERROR: You cannot set severity from extended logger`);\n                };\n                extendedLog[\"getSeverity\"] = () => {\n                    throw Error(`[react-native-logs] ERROR: You cannot get severity from extended logger`);\n                };\n                extendedLog[\"patchConsole\"] = () => {\n                    throw Error(`[react-native-logs] ERROR: You cannot patch console from extended logger`);\n                };\n                extendedLog[\"getOriginalConsole\"] = () => {\n                    throw Error(`[react-native-logs] ERROR: You cannot get original console from extended logger`);\n                };\n            });\n            return extendedLog;\n        };\n        /** Enable logger or extension */\n        this.enable = (extension) => {\n            if (!extension) {\n                this._enabled = true;\n                return true;\n            }\n            if (this._extensions.includes(extension)) {\n                if (this._enabledExtensions) {\n                    if (!this._enabledExtensions.includes(extension)) {\n                        this._enabledExtensions.push(extension);\n                        return true;\n                    }\n                    else {\n                        return true;\n                    }\n                }\n                else {\n                    this._enabledExtensions = [];\n                    this._enabledExtensions.push(extension);\n                    return true;\n                }\n            }\n            else {\n                throw Error(`[react-native-logs:enable] ERROR: Extension [${extension}] not exist`);\n            }\n        };\n        /** Disable logger or extension */\n        this.disable = (extension) => {\n            if (!extension) {\n                this._enabled = false;\n                return true;\n            }\n            if (this._extensions.includes(extension)) {\n                if (this._enabledExtensions) {\n                    let extIndex = this._enabledExtensions.indexOf(extension);\n                    if (extIndex > -1) {\n                        this._enabledExtensions.splice(extIndex, 1);\n                    }\n                    return true;\n                }\n                else {\n                    return true;\n                }\n            }\n            else {\n                throw Error(`[react-native-logs:disable] ERROR: Extension [${extension}] not exist`);\n            }\n        };\n        /** Return all created extensions */\n        this.getExtensions = () => {\n            return this._extensions;\n        };\n        /** Set log severity API */\n        this.setSeverity = (level) => {\n            if (level in this._levels) {\n                this._level = level;\n            }\n            else {\n                throw Error(`[react-native-logs:setSeverity] ERROR: Level [${level}] not exist`);\n            }\n            return this._level;\n        };\n        /** Get current log severity API */\n        this.getSeverity = () => {\n            return this._level;\n        };\n        /** Monkey Patch global console.log */\n        this.patchConsole = () => {\n            let extension = \"console\";\n            let levelKeys = Object.keys(this._levels);\n            if (!this._originalConsole) {\n                this._originalConsole = console;\n            }\n            if (!this._transportOptions.consoleFunc) {\n                this._transportOptions.consoleFunc = this._originalConsole.log;\n            }\n            console[\"log\"] = (...msgs) => {\n                this._log(levelKeys[0], extension, ...msgs);\n            };\n            levelKeys.forEach((level) => {\n                if (console[level]) {\n                    console[level] = (...msgs) => {\n                        this._log(level, extension, ...msgs);\n                    };\n                }\n                else {\n                    this._originalConsole &&\n                        this._originalConsole.log(`[react-native-logs:patchConsole] WARNING: \"${level}\" method does not exist in console and will not be available`);\n                }\n            });\n        };\n        this._levels = config.levels;\n        this._level = (_a = config.severity) !== null && _a !== void 0 ? _a : Object.keys(this._levels)[0];\n        this._transport = config.transport;\n        this._transportOptions = config.transportOptions;\n        this._asyncFunc = config.asyncFunc;\n        this._async = config.async;\n        this._stringifyFunc = config.stringifyFunc;\n        this._dateFormat = config.dateFormat;\n        this._printLevel = config.printLevel;\n        this._printDate = config.printDate;\n        this._enabled = config.enabled;\n        if (Array.isArray(config.enabledExtensions)) {\n            this._enabledExtensions = config.enabledExtensions;\n        }\n        else if (typeof config.enabledExtensions === \"string\") {\n            this._enabledExtensions = [config.enabledExtensions];\n        }\n        /** Bind correct log levels methods */\n        let _this = this;\n        Object.keys(this._levels).forEach((level) => {\n            if (typeof level !== \"string\") {\n                throw Error(`[react-native-logs] ERROR: levels must be strings`);\n            }\n            if (level[0] === \"_\") {\n                throw Error(`[react-native-logs] ERROR: keys with first char \"_\" is reserved and cannot be used as levels`);\n            }\n            if (reservedKey.indexOf(level) !== -1) {\n                throw Error(`[react-native-logs] ERROR: [${level}] is a reserved key, you cannot set it as custom level`);\n            }\n            if (typeof this._levels[level] === \"number\") {\n                _this[level] = this._log.bind(this, level, null);\n            }\n            else {\n                throw Error(`[react-native-logs] ERROR: [${level}] wrong level config`);\n            }\n        }, this);\n    }\n}\n/**\n * Create a logger object. All params will take default values if not passed.\n * each levels has its level severity so we can filter logs with < and > operators\n * all subsequent levels to the one selected will be exposed (ordered by severity asc)\n * through the transport\n */\nconst createLogger = (config) => {\n    const mergedConfig = Object.assign(Object.assign({}, defaultLogger), config);\n    return new logs(mergedConfig);\n};\nconst logger = { createLogger };\nexports.logger = logger;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}