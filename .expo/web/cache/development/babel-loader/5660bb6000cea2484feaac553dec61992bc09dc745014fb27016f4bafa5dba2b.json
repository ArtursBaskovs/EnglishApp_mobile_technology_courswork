{"ast":null,"code":"import { logger } from 'react-native-logs';\nimport { appendFile } from 'expo-file-system';\nvar logFilePath = 'path/to/log.txt';\nexport var log = logger.createLogger({\n  logFunction: function logFunction(_ref) {\n    var level = _ref.level,\n      message = _ref.message;\n    var logMessage = message + \"\\n\";\n    appendFile(logFilePath, logMessage, {\n      encoding: 'utf8'\n    }).then(function () {\n      return console.log('Log written to file');\n    }).catch(function (error) {\n      return console.error('Error writing log:', error);\n    });\n  }\n});","map":{"version":3,"names":["logger","appendFile","logFilePath","log","createLogger","logFunction","_ref","level","message","logMessage","encoding","then","console","catch","error"],"sources":["C:/Users/12art/Desktop/konstruktors/EnglishApp_mobile_technology_courswork/logger.js"],"sourcesContent":["import { logger } from 'react-native-logs';\r\nimport { appendFile } from 'expo-file-system';\r\n\r\nconst logFilePath = 'path/to/log.txt'; // Путь к файлу логов внутри вашего проекта\r\n\r\nexport const log = logger.createLogger({\r\n  logFunction: ({ level, message }) => {\r\n    const logMessage = `${message}\\n`; // Просто сообщение без форматирования\r\n    appendFile(logFilePath, logMessage, { encoding: 'utf8' })\r\n      .then(() => console.log('Log written to file'))\r\n      .catch(error => console.error('Error writing log:', error));\r\n  },\r\n  // Другие параметры конфигурации, если необходимо\r\n});\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,IAAMC,WAAW,GAAG,iBAAiB;AAErC,OAAO,IAAMC,GAAG,GAAGH,MAAM,CAACI,YAAY,CAAC;EACrCC,WAAW,EAAE,SAAAA,YAAAC,IAAA,EAAwB;IAAA,IAArBC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAC5B,IAAMC,UAAU,GAAMD,OAAO,OAAI;IACjCP,UAAU,CAACC,WAAW,EAAEO,UAAU,EAAE;MAAEC,QAAQ,EAAE;IAAO,CAAC,CAAC,CACtDC,IAAI,CAAC;MAAA,OAAMC,OAAO,CAACT,GAAG,CAAC,qBAAqB,CAAC;IAAA,EAAC,CAC9CU,KAAK,CAAC,UAAAC,KAAK;MAAA,OAAIF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAAA,EAAC;EAC/D;AAEF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}