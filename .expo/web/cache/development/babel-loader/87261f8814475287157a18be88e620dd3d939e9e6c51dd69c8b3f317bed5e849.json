{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as FileSystem from 'expo-file-system';\nimport { logger, fileAsyncTransport } from 'react-native-logs';\nvar fileSystem = {\n  appendFile: function () {\n    var _appendFile = _asyncToGenerator(function* (filePath, data, encoding) {\n      try {\n        yield FileSystem.appendAsync(filePath, data, {\n          encoding: FileSystem.EncodingType.UTF8\n        });\n      } catch (error) {\n        console.error(\"Ошибка записи в файл:\", error);\n        throw error;\n      }\n    });\n    function appendFile(_x, _x2, _x3) {\n      return _appendFile.apply(this, arguments);\n    }\n    return appendFile;\n  }()\n};\nexport var log = logger.createLogger({\n  transport: fileAsyncTransport,\n  transportOptions: {\n    fileSystem: fileSystem,\n    fileName: 'appLogs.txt',\n    formatter: function formatter(msg) {\n      return \"[\" + msg.date.toISOString() + \"] [\" + msg.type + \"] \" + msg.message;\n    }\n  }\n});","map":{"version":3,"names":["FileSystem","logger","fileAsyncTransport","fileSystem","appendFile","_appendFile","_asyncToGenerator","filePath","data","encoding","appendAsync","EncodingType","UTF8","error","console","_x","_x2","_x3","apply","arguments","log","createLogger","transport","transportOptions","fileName","formatter","msg","date","toISOString","type","message"],"sources":["C:/Users/12art/Desktop/konstruktors/EnglishApp_mobile_technology_courswork/logger.js"],"sourcesContent":["import * as FileSystem from 'expo-file-system';\r\nimport { logger, fileAsyncTransport } from 'react-native-logs';\r\n\r\nconst fileSystem = {\r\n  appendFile: async (filePath, data, encoding) => {\r\n    try {\r\n      await FileSystem.appendAsync(filePath, data, { encoding: FileSystem.EncodingType.UTF8 });\r\n    } catch (error) {\r\n      console.error(\"Ошибка записи в файл:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport const log = logger.createLogger({\r\n  transport: fileAsyncTransport,\r\n  transportOptions: {\r\n    fileSystem: fileSystem,\r\n    fileName: 'appLogs.txt',\r\n    formatter: (msg) => `[${msg.date.toISOString()}] [${msg.type}] ${msg.message}`,\r\n  },\r\n});\r\n"],"mappings":";AAAA,OAAO,KAAKA,UAAU,MAAM,kBAAkB;AAC9C,SAASC,MAAM,EAAEC,kBAAkB,QAAQ,mBAAmB;AAE9D,IAAMC,UAAU,GAAG;EACjBC,UAAU;IAAA,IAAAC,WAAA,GAAAC,iBAAA,CAAE,WAAOC,QAAQ,EAAEC,IAAI,EAAEC,QAAQ,EAAK;MAC9C,IAAI;QACF,MAAMT,UAAU,CAACU,WAAW,CAACH,QAAQ,EAAEC,IAAI,EAAE;UAAEC,QAAQ,EAAET,UAAU,CAACW,YAAY,CAACC;QAAK,CAAC,CAAC;MAC1F,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C,MAAMA,KAAK;MACb;IACF,CAAC;IAAA,SAAAT,WAAAW,EAAA,EAAAC,GAAA,EAAAC,GAAA;MAAA,OAAAZ,WAAA,CAAAa,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAf,UAAA;EAAA;AACH,CAAC;AAED,OAAO,IAAMgB,GAAG,GAAGnB,MAAM,CAACoB,YAAY,CAAC;EACrCC,SAAS,EAAEpB,kBAAkB;EAC7BqB,gBAAgB,EAAE;IAChBpB,UAAU,EAAEA,UAAU;IACtBqB,QAAQ,EAAE,aAAa;IACvBC,SAAS,EAAE,SAAAA,UAACC,GAAG;MAAA,aAASA,GAAG,CAACC,IAAI,CAACC,WAAW,EAAE,WAAMF,GAAG,CAACG,IAAI,UAAKH,GAAG,CAACI,OAAO;IAAA;EAC9E;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}