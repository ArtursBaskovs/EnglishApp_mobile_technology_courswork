{"ast":null,"code":"import * as FileSystem from 'expo-file-system';\nimport { logger } from 'react-native-logs';\nvar logFilePath = FileSystem.documentDirectory + 'appLogs.txt';\nexport var log = logger.createLogger({\n  logFunction: function logFunction(_ref) {\n    var level = _ref.level,\n      message = _ref.message;\n    var logMessage = \"[\" + new Date().toISOString() + \"] [\" + level + \"] \" + message + \"\\n\";\n    FileSystem.writeAsStringAsync(logFilePath, logMessage, {\n      encoding: FileSystem.EncodingType.UTF8,\n      append: true\n    }).then(function () {\n      return console.log('Log written to file');\n    }).catch(function (error) {\n      return console.error('Error writing log:', error);\n    });\n  }\n});","map":{"version":3,"names":["FileSystem","logger","logFilePath","documentDirectory","log","createLogger","logFunction","_ref","level","message","logMessage","Date","toISOString","writeAsStringAsync","encoding","EncodingType","UTF8","append","then","console","catch","error"],"sources":["C:/Users/12art/Desktop/konstruktors/EnglishApp_mobile_technology_courswork/logger.js"],"sourcesContent":["import * as FileSystem from 'expo-file-system';\r\nimport { logger } from 'react-native-logs';\r\n\r\nconst logFilePath = FileSystem.documentDirectory + 'appLogs.txt';\r\n\r\nexport const log = logger.createLogger({\r\n  logFunction: ({ level, message }) => {\r\n    const logMessage = `[${new Date().toISOString()}] [${level}] ${message}\\n`;\r\n    FileSystem.writeAsStringAsync(logFilePath, logMessage, { encoding: FileSystem.EncodingType.UTF8, append: true })\r\n      .then(() => console.log('Log written to file')) // Опционально: лог об успешной записи\r\n      .catch(error => console.error('Error writing log:', error)); // Опционально: обработка ошибки записи\r\n  },\r\n});\r\n"],"mappings":"AAAA,OAAO,KAAKA,UAAU,MAAM,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,mBAAmB;AAE1C,IAAMC,WAAW,GAAGF,UAAU,CAACG,iBAAiB,GAAG,aAAa;AAEhE,OAAO,IAAMC,GAAG,GAAGH,MAAM,CAACI,YAAY,CAAC;EACrCC,WAAW,EAAE,SAAAA,YAAAC,IAAA,EAAwB;IAAA,IAArBC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAC5B,IAAMC,UAAU,SAAO,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,WAAMJ,KAAK,UAAKC,OAAO,OAAI;IAC1ET,UAAU,CAACa,kBAAkB,CAACX,WAAW,EAAEQ,UAAU,EAAE;MAAEI,QAAQ,EAAEd,UAAU,CAACe,YAAY,CAACC,IAAI;MAAEC,MAAM,EAAE;IAAK,CAAC,CAAC,CAC7GC,IAAI,CAAC;MAAA,OAAMC,OAAO,CAACf,GAAG,CAAC,qBAAqB,CAAC;IAAA,EAAC,CAC9CgB,KAAK,CAAC,UAAAC,KAAK;MAAA,OAAIF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAAA,EAAC;EAC/D;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}