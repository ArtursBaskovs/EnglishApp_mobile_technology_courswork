{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport db from \"../db/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TaskComponent = function TaskComponent() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    englishApp_tasks = _useState2[0],\n    setEnglishApp_tasks = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    documents = _useState4[0],\n    setDocuments = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    inputValue = _useState6[0],\n    setInputValue = _useState6[1];\n  var word = '';\n  var rightAnswer = '';\n  var randomIndex = 0;\n  var taskType = '';\n  useEffect(function () {\n    var dataCollection = db.collection('englishApp_tasks');\n    var collectInJSON = dataCollection.onSnapshot(function (querySnapshot) {\n      var docsFromFirebase = [];\n      var index = 0;\n      querySnapshot.forEach(function (doc) {\n        docsFromFirebase[index] = doc.data();\n        index++;\n      });\n      console.log(docsFromFirebase);\n      setDocuments(docsFromFirebase);\n    });\n    console.log('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF');\n    return function () {\n      collectInJSON();\n    };\n  }, []);\n  useEffect(function () {\n    if (documents != null) {\n      randomIndex = Math.floor(Math.random() * documents.length);\n      word = documents[randomIndex].eng;\n      rightAnswer = documents[randomIndex].lv;\n      taskType = documents[randomIndex].taskType;\n    }\n    console.log(documents);\n    return function () {\n      console.log(\"values given\");\n    };\n  }, [documents]);\n  var handleInputChange = function handleInputChange(text) {\n    setInputValue(text);\n  };\n  var handleSubmit = function handleSubmit() {\n    console.log(inputValue);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: word\n    }), _jsx(TextInput, {\n      placeholder: \"Enter your input here\",\n      onChangeText: handleInputChange,\n      value: inputValue\n    }), _jsx(Button, {\n      title: \"Submit\",\n      onPress: handleSubmit\n    })]\n  });\n};\nexport default TaskComponent;","map":{"version":3,"names":["React","useEffect","useState","View","TextInput","Button","Text","db","jsx","_jsx","jsxs","_jsxs","TaskComponent","_useState","_useState2","_slicedToArray","englishApp_tasks","setEnglishApp_tasks","_useState3","_useState4","documents","setDocuments","_useState5","_useState6","inputValue","setInputValue","word","rightAnswer","randomIndex","taskType","dataCollection","collection","collectInJSON","onSnapshot","querySnapshot","docsFromFirebase","index","forEach","doc","data","console","log","Math","floor","random","length","eng","lv","handleInputChange","text","handleSubmit","children","placeholder","onChangeText","value","title","onPress"],"sources":["C:/Users/12art/Desktop/myEnglishApp/myEnglishApp/component/TaskComponent.tsx"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from 'react';\r\nimport { View, TextInput, Button, Text } from 'react-native';\r\nimport db from '../db/firestore';\r\nimport Tasks from './Tasks';\r\n\r\nconst TaskComponent = () => {\r\n    const [ englishApp_tasks, setEnglishApp_tasks ] = useState<Object[]>();\r\n\r\n    const [documents, setDocuments] = useState(null);\r\n\r\n    const [inputValue, setInputValue] = useState(null);\r\n\r\n    let word = '';\r\n    let rightAnswer = '';\r\n    let randomIndex = 0;\r\n    let taskType = '';\r\n\r\n    useEffect( ()=>{\r\n      const dataCollection = db.collection('englishApp_tasks')\r\n\r\n        const collectInJSON = dataCollection.onSnapshot((querySnapshot) => {\r\n          const docsFromFirebase = [];\r\n          let index = 0\r\n          querySnapshot.forEach((doc) => {\r\n            docsFromFirebase[index] = doc.data();\r\n            index++;\r\n          });\r\n          console.log(docsFromFirebase)\r\n          setDocuments(docsFromFirebase);\r\n        });\r\n\r\n\r\n\r\n        console.log('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF')\r\n        return () => {\r\n          collectInJSON();\r\n        };\r\n    }, [])\r\n    //console.log(typeof documents)\r\n    \r\n\r\n  useEffect(() => {\r\n    if(documents != null) {\r\n      randomIndex = Math.floor(Math.random() * documents.length);\r\n      word = documents[randomIndex].eng;\r\n      rightAnswer = documents[randomIndex].lv;\r\n      taskType = documents[randomIndex].taskType;\r\n  \r\n    }\r\n    console.log(documents)\r\n    return () => {\r\n      console.log(\"values given\")\r\n    }\r\n  }, [documents])\r\n  \r\n    \r\n  \r\n\r\n  const handleInputChange = (text) => {\r\n    setInputValue(text);\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n   \r\n    console.log(inputValue);\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <View>\r\n        \r\n        <Text>{word}</Text>\r\n      <TextInput\r\n        placeholder=\"Enter your input here\"\r\n        onChangeText={handleInputChange}\r\n        value={inputValue}\r\n      />\r\n      <Button\r\n        title=\"Submit\"\r\n        onPress={handleSubmit}\r\n      />\r\n     \r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TaskComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}