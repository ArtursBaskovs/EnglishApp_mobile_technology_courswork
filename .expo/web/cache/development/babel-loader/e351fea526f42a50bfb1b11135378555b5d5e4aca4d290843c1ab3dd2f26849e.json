{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport db from \"../db/firestore\";\nvar Tasks = function Tasks() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    englishApp_tasks = _useState2[0],\n    setEnglishApp_tasks = _useState2[1];\n  useEffect(function () {\n    db.collection('englishApp_tasks').get().then(function (result) {\n      return result.docs;\n    }).then(function (docs) {\n      return docs.map(function (doc) {\n        return {\n          id: doc.id,\n          eng: doc.data().eng,\n          lv: doc.data().lv,\n          taskDificulty: doc.data().taskDificulty,\n          taskType: doc.data().taskType\n        };\n      });\n    }).then(function (englishApp_tasks) {\n      return setEnglishApp_tasks(englishApp_tasks);\n    });\n  }, []);\n  if (typeof englishApp_tasks !== 'undefined') {\n    console.log(englishApp_tasks);\n  }\n};\nexport default Tasks;","map":{"version":3,"names":["useEffect","useState","db","Tasks","_useState","_useState2","_slicedToArray","englishApp_tasks","setEnglishApp_tasks","collection","get","then","result","docs","map","doc","id","eng","data","lv","taskDificulty","taskType","console","log"],"sources":["C:/Users/12art/Desktop/myEnglishApp/myEnglishApp/component/Tasks.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport db from '../db/firestore';\r\n\r\nconst Tasks = () => {\r\n\r\n    const [ englishApp_tasks, setEnglishApp_tasks ] = useState<Object[]>();\r\n\r\n    useEffect( ()=>{\r\n        db.collection('englishApp_tasks')\r\n        .get()\r\n        .then(result => result.docs)\r\n        .then(docs => docs.map(doc => ({\r\n            id: doc.id, \r\n            eng: doc.data().eng, \r\n            lv: doc.data().lv,\r\n            taskDificulty: doc.data().taskDificulty,\r\n            taskType: doc.data().taskType\r\n        })))\r\n        .then(englishApp_tasks => setEnglishApp_tasks(englishApp_tasks))\r\n    }, [])\r\n    if (typeof englishApp_tasks !== 'undefined') {\r\n        console.log(englishApp_tasks);\r\n    }\r\n    \r\n    //show content\r\n\r\n};\r\n\r\nexport default Tasks;"],"mappings":";AAAA,SAAgBA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,EAAE;AAET,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;EAEhB,IAAAC,SAAA,GAAkDH,QAAQ,EAAY;IAAAI,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9DG,gBAAgB,GAAAF,UAAA;IAAEG,mBAAmB,GAAAH,UAAA;EAE7CL,SAAS,CAAE,YAAI;IACXE,EAAE,CAACO,UAAU,CAAC,kBAAkB,CAAC,CAChCC,GAAG,EAAE,CACLC,IAAI,CAAC,UAAAC,MAAM;MAAA,OAAIA,MAAM,CAACC,IAAI;IAAA,EAAC,CAC3BF,IAAI,CAAC,UAAAE,IAAI;MAAA,OAAIA,IAAI,CAACC,GAAG,CAAC,UAAAC,GAAG;QAAA,OAAK;UAC3BC,EAAE,EAAED,GAAG,CAACC,EAAE;UACVC,GAAG,EAAEF,GAAG,CAACG,IAAI,EAAE,CAACD,GAAG;UACnBE,EAAE,EAAEJ,GAAG,CAACG,IAAI,EAAE,CAACC,EAAE;UACjBC,aAAa,EAAEL,GAAG,CAACG,IAAI,EAAE,CAACE,aAAa;UACvCC,QAAQ,EAAEN,GAAG,CAACG,IAAI,EAAE,CAACG;QACzB,CAAC;MAAA,CAAC,CAAC;IAAA,EAAC,CACHV,IAAI,CAAC,UAAAJ,gBAAgB;MAAA,OAAIC,mBAAmB,CAACD,gBAAgB,CAAC;IAAA,EAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EACN,IAAI,OAAOA,gBAAgB,KAAK,WAAW,EAAE;IACzCe,OAAO,CAACC,GAAG,CAAChB,gBAAgB,CAAC;EACjC;AAIJ,CAAC;AAED,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}