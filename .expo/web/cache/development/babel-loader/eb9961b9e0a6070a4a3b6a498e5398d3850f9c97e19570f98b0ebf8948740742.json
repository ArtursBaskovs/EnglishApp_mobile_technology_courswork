{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport db from \"../db/firestore\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TaskComponent = function TaskComponent() {\n  var navigation = useNavigation();\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    englishApp_tasks = _useState2[0],\n    setEnglishApp_tasks = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    documents = _useState4[0],\n    setDocuments = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    inputValue = _useState6[0],\n    setInputValue = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    update = _useState8[0],\n    setUpdate = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    usedIndexes = _useState10[0],\n    setUsedIndexes = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    word = _useState12[0],\n    setWord = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    rightAnswer = _useState14[0],\n    setRightAnswer = _useState14[1];\n  var randomIndex = 0;\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    taskType = _useState16[0],\n    setTaskType = _useState16[1];\n  useEffect(function () {\n    var dataCollection = db.collection('englishApp_tasks');\n    var collectInJSON = dataCollection.onSnapshot(function (querySnapshot) {\n      var docsFromFirebase = [];\n      var index = 0;\n      querySnapshot.forEach(function (doc) {\n        docsFromFirebase[index] = doc.data();\n        index++;\n      });\n      console.log(docsFromFirebase);\n      setDocuments(docsFromFirebase);\n    });\n    console.log('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF');\n    return function () {\n      collectInJSON();\n    };\n  }, []);\n  useEffect(function () {\n    if (documents != null) {\n      randomIndex = Math.floor(Math.random() * documents.length);\n      var i = 0;\n      var endThis = false;\n      while (true) {\n        if (!usedIndexes.includes(randomIndex)) {\n          break;\n        }\n        randomIndex = Math.floor(Math.random() * documents.length);\n        if (usedIndexes.length <= i) {\n          endThis = true;\n          break;\n        }\n        i++;\n      }\n      if (endThis) {\n        return function () {\n          console.log(\"Run out of tasks\");\n        };\n      }\n      console.log(documents[randomIndex]);\n      setWord(documents[randomIndex].eng);\n      setRightAnswer(documents[randomIndex].lv);\n      setTaskType(documents[randomIndex].taskType);\n      addUsedIndex(randomIndex);\n    }\n    return function () {\n      setWord('');\n      console.log(\"values given\");\n    };\n  }, [documents, update]);\n  var handleInputChange = function handleInputChange(text) {\n    setInputValue(text);\n  };\n  var handleSubmit = function handleSubmit() {\n    if (inputValue == rightAnswer) {\n      console.log(\"hdsadjhakdhasdhaj\");\n      setUpdate(!update);\n      setInputValue('');\n    }\n  };\n  var addUsedIndex = function addUsedIndex(index) {\n    setUsedIndexes([].concat(_toConsumableArray(usedIndexes), [index]));\n    console.log(\"index added\");\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: word && word\n    }), _jsx(TextInput, {\n      placeholder: \"Enter your input here\",\n      onChangeText: handleInputChange,\n      value: inputValue\n    }), _jsx(Button, {\n      title: \"Submit\",\n      onPress: handleSubmit\n    })]\n  });\n};\nexport default TaskComponent;","map":{"version":3,"names":["React","useEffect","useState","View","TextInput","Button","Text","db","useNavigation","jsx","_jsx","jsxs","_jsxs","TaskComponent","navigation","_useState","_useState2","_slicedToArray","englishApp_tasks","setEnglishApp_tasks","_useState3","_useState4","documents","setDocuments","_useState5","_useState6","inputValue","setInputValue","_useState7","_useState8","update","setUpdate","_useState9","_useState10","usedIndexes","setUsedIndexes","_useState11","_useState12","word","setWord","_useState13","_useState14","rightAnswer","setRightAnswer","randomIndex","_useState15","_useState16","taskType","setTaskType","dataCollection","collection","collectInJSON","onSnapshot","querySnapshot","docsFromFirebase","index","forEach","doc","data","console","log","Math","floor","random","length","i","endThis","includes","eng","lv","addUsedIndex","handleInputChange","text","handleSubmit","concat","_toConsumableArray","children","placeholder","onChangeText","value","title","onPress"],"sources":["C:/Users/12art/Desktop/myEnglishApp/myEnglishApp/component/TaskComponent.tsx"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from 'react';\r\nimport { View, TextInput, Button, Text } from 'react-native';\r\nimport db from '../db/firestore';\r\nimport Tasks from './Tasks';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\n\r\nconst TaskComponent = () => {\r\n    const navigation = useNavigation();\r\n    const [ englishApp_tasks, setEnglishApp_tasks ] = useState<Object[]>();\r\n\r\n    const [documents, setDocuments] = useState(null);\r\n\r\n    const [inputValue, setInputValue] = useState(null);\r\n\r\n    const [update, setUpdate] = useState(false);\r\n\r\n    const [usedIndexes, setUsedIndexes] = useState([]);\r\n\r\n    //let word = '';\r\n    const [word, setWord] = useState('');\r\n    //let rightAnswer = '';\r\n    const [rightAnswer, setRightAnswer] = useState('');\r\n    let randomIndex = 0;\r\n    const [taskType, setTaskType] = useState('');\r\n    //let taskType = '';\r\n\r\n    useEffect( ()=>{\r\n      const dataCollection = db.collection('englishApp_tasks')\r\n\r\n        const collectInJSON = dataCollection.onSnapshot((querySnapshot) => {\r\n          const docsFromFirebase = [];\r\n          let index = 0\r\n          querySnapshot.forEach((doc) => {\r\n            docsFromFirebase[index] = doc.data();\r\n            index++;\r\n          });\r\n          console.log(docsFromFirebase)\r\n          setDocuments(docsFromFirebase);\r\n        });\r\n\r\n\r\n\r\n        console.log('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF')\r\n        return () => {\r\n          collectInJSON();\r\n        };\r\n    }, [])\r\n    \r\n  //\r\n  useEffect(() => {\r\n    if(documents != null) {\r\n\r\n      randomIndex = Math.floor(Math.random() * documents.length);\r\n      let i = 0;\r\n      let endThis = false; \r\n      while (true){\r\n        if(!usedIndexes.includes(randomIndex)){\r\n          break;\r\n        }\r\n        randomIndex = Math.floor(Math.random() * documents.length);\r\n        if(usedIndexes.length <= i){\r\n          endThis = true;\r\n          break;\r\n        }\r\n\r\n        i++;\r\n      }\r\n\r\n      if(endThis) {\r\n        return () => {\r\n          console.log(\"Run out of tasks\");\r\n          //navigation.navigate('Results');\r\n        }\r\n      }\r\n      \r\n      console.log(documents[randomIndex])\r\n      setWord(documents[randomIndex].eng);\r\n      setRightAnswer(documents[randomIndex].lv);\r\n      setTaskType(documents[randomIndex].taskType);\r\n      addUsedIndex(randomIndex);\r\n      \r\n    }\r\n   \r\n    return () => {\r\n      setWord('');\r\n      console.log(\"values given\")\r\n    }\r\n  }, [documents, update])\r\n  \r\n\r\n\r\n    \r\n  \r\n\r\n  const handleInputChange = (text) => {\r\n    setInputValue(text);\r\n  }\r\n  \r\n  \r\n//count points\r\n//count time\r\n//tasks count\r\n//task types\r\n//design\r\n//more data in db\r\n\r\n/*\r\nmyCollection\r\n  .add({\r\n    name: 'John Doe',\r\n    age: 30,\r\n    email: 'john.doe@example.com',\r\n  })\r\n  .then((docRef) => {\r\n    console.log('Document written with ID: ', docRef.id);\r\n  })\r\n  .catch((error) => {\r\n    console.error('Error adding document: ', error);\r\n  });\r\n\r\n\r\n*/\r\n\r\n  const handleSubmit = () => {\r\n   if(inputValue == rightAnswer){\r\n    \r\n    console.log(\"hdsadjhakdhasdhaj\");\r\n    setUpdate(!update);\r\n    setInputValue('');\r\n    \r\n   }\r\n  }\r\n  //I populate array of used indexes to check if given task was used during one session\r\n  const addUsedIndex = (index) => {\r\n    setUsedIndexes([...usedIndexes, index]);\r\n    console.log(\"index added\");\r\n  }\r\n\r\n\r\n  //usedIndexes && console.log(usedIndexes);\r\n\r\n\r\n  return (\r\n    \r\n    <View>\r\n        \r\n        <Text>{word && word}</Text>\r\n      <TextInput\r\n        placeholder=\"Enter your input here\"\r\n        onChangeText={handleInputChange}\r\n        value={inputValue}\r\n      />\r\n      <Button\r\n        title=\"Submit\"\r\n        onPress={handleSubmit}\r\n      />\r\n     \r\n    </View>\r\n    \r\n  );\r\n};\r\n\r\nexport default TaskComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}