{"ast":null,"code":"import { logger } from 'react-native-logs';\nvar log = logger.createLogger();\nfunction saveLogToIndexedDB(logMessage) {\n  var request = indexedDB.open('MyLogsDB', 1);\n  request.onupgradeneeded = function (event) {\n    var db = event.target.result;\n    var objectStore = db.createObjectStore('logs', {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n    objectStore.createIndex('message', 'message', {\n      unique: false\n    });\n  };\n  request.onsuccess = function (event) {\n    var db = event.target.result;\n    var transaction = db.transaction(['logs'], 'readwrite');\n    var objectStore = transaction.objectStore('logs');\n    var addRequest = objectStore.add({\n      message: logMessage\n    });\n    addRequest.onsuccess = function () {\n      console.log('Log saved to IndexedDB');\n    };\n    addRequest.onerror = function () {\n      console.error('Error saving log to IndexedDB');\n    };\n  };\n  request.onerror = function (event) {\n    console.error('Error opening IndexedDB');\n  };\n}\nfunction logWrapper(level, message) {\n  log.log(level, message);\n  saveLogToIndexedDB(message);\n}\nlog.log = logWrapper;\nexport { log };","map":{"version":3,"names":["logger","log","createLogger","saveLogToIndexedDB","logMessage","request","indexedDB","open","onupgradeneeded","event","db","target","result","objectStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","onsuccess","transaction","addRequest","add","message","console","onerror","error","logWrapper","level"],"sources":["C:/Users/12art/Desktop/konstruktors/EnglishApp_mobile_technology_courswork/logger.js"],"sourcesContent":["import { logger } from 'react-native-logs';\r\n\r\n// Создание логгера\r\nconst log = logger.createLogger();\r\n\r\n// Функция для сохранения логов в IndexedDB\r\nfunction saveLogToIndexedDB(logMessage) {\r\n  // Инициализация IndexedDB\r\n  const request = indexedDB.open('MyLogsDB', 1);\r\n\r\n  // Обработчик успешного создания или обновления базы данных\r\n  request.onupgradeneeded = function(event) {\r\n    const db = event.target.result;\r\n    const objectStore = db.createObjectStore('logs', { keyPath: 'id', autoIncrement: true });\r\n    objectStore.createIndex('message', 'message', { unique: false });\r\n  };\r\n\r\n  // Обработчик успешного открытия базы данных\r\n  request.onsuccess = function(event) {\r\n    const db = event.target.result;\r\n    const transaction = db.transaction(['logs'], 'readwrite');\r\n    const objectStore = transaction.objectStore('logs');\r\n    \r\n    const addRequest = objectStore.add({ message: logMessage });\r\n    \r\n    addRequest.onsuccess = function() {\r\n      console.log('Log saved to IndexedDB');\r\n    };\r\n    \r\n    addRequest.onerror = function() {\r\n      console.error('Error saving log to IndexedDB');\r\n    };\r\n  };\r\n\r\n  // Обработчик ошибок при открытии базы данных\r\n  request.onerror = function(event) {\r\n    console.error('Error opening IndexedDB');\r\n  };\r\n}\r\n\r\n// Функция-обёртка для записи логов в консоль и IndexedDB\r\nfunction logWrapper(level, message) {\r\n  log.log(level, message); // Вывод лога в консоль\r\n  saveLogToIndexedDB(message); // Сохранение лога в IndexedDB\r\n}\r\n\r\n// Замена стандартной функции логирования на обёрнутую функцию\r\nlog.log = logWrapper;\r\n\r\nexport { log };\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,mBAAmB;AAG1C,IAAMC,GAAG,GAAGD,MAAM,CAACE,YAAY,EAAE;AAGjC,SAASC,kBAAkBA,CAACC,UAAU,EAAE;EAEtC,IAAMC,OAAO,GAAGC,SAAS,CAACC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;EAG7CF,OAAO,CAACG,eAAe,GAAG,UAASC,KAAK,EAAE;IACxC,IAAMC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACC,MAAM;IAC9B,IAAMC,WAAW,GAAGH,EAAE,CAACI,iBAAiB,CAAC,MAAM,EAAE;MAAEC,OAAO,EAAE,IAAI;MAAEC,aAAa,EAAE;IAAK,CAAC,CAAC;IACxFH,WAAW,CAACI,WAAW,CAAC,SAAS,EAAE,SAAS,EAAE;MAAEC,MAAM,EAAE;IAAM,CAAC,CAAC;EAClE,CAAC;EAGDb,OAAO,CAACc,SAAS,GAAG,UAASV,KAAK,EAAE;IAClC,IAAMC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACC,MAAM;IAC9B,IAAMQ,WAAW,GAAGV,EAAE,CAACU,WAAW,CAAC,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC;IACzD,IAAMP,WAAW,GAAGO,WAAW,CAACP,WAAW,CAAC,MAAM,CAAC;IAEnD,IAAMQ,UAAU,GAAGR,WAAW,CAACS,GAAG,CAAC;MAAEC,OAAO,EAAEnB;IAAW,CAAC,CAAC;IAE3DiB,UAAU,CAACF,SAAS,GAAG,YAAW;MAChCK,OAAO,CAACvB,GAAG,CAAC,wBAAwB,CAAC;IACvC,CAAC;IAEDoB,UAAU,CAACI,OAAO,GAAG,YAAW;MAC9BD,OAAO,CAACE,KAAK,CAAC,+BAA+B,CAAC;IAChD,CAAC;EACH,CAAC;EAGDrB,OAAO,CAACoB,OAAO,GAAG,UAAShB,KAAK,EAAE;IAChCe,OAAO,CAACE,KAAK,CAAC,yBAAyB,CAAC;EAC1C,CAAC;AACH;AAGA,SAASC,UAAUA,CAACC,KAAK,EAAEL,OAAO,EAAE;EAClCtB,GAAG,CAACA,GAAG,CAAC2B,KAAK,EAAEL,OAAO,CAAC;EACvBpB,kBAAkB,CAACoB,OAAO,CAAC;AAC7B;AAGAtB,GAAG,CAACA,GAAG,GAAG0B,UAAU;AAEpB,SAAS1B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}