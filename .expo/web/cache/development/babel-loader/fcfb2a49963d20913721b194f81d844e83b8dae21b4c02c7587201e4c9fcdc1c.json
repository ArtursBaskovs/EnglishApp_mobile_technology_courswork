{"ast":null,"code":"var _require = require('react-native-logs'),\n  logger = _require.logger;\nvar logFilePath = './logs/log.txt';\nexport var log = logger.createLogger({\n  transport: function transport(_ref) {\n    var level = _ref.level,\n      message = _ref.message;\n    var logMessage = \"[\" + new Date().toISOString() + \"] [\" + level + \"] \" + message + \"\\n\";\n    console.log(logMessage);\n  }\n});","map":{"version":3,"names":["_require","require","logger","logFilePath","log","createLogger","transport","_ref","level","message","logMessage","Date","toISOString","console"],"sources":["C:/Users/12art/Desktop/konstruktors/EnglishApp_mobile_technology_courswork/logger.js"],"sourcesContent":["const { logger } = require('react-native-logs');\r\n\r\nconst logFilePath = './logs/log.txt'; // Путь к файлу логов внутри вашего проекта\r\n\r\nexport const log = logger.createLogger({\r\n  transport: ({ level, message }) => {\r\n    const logMessage = `[${new Date().toISOString()}] [${level}] ${message}\\n`;\r\n    // В этом месте вместо fs используется другой метод сохранения в файл\r\n    // Например, localStorage.setItem() для сохранения в браузере\r\n    // Или отправка на сервер для сохранения на сервере\r\n    console.log(logMessage); // Вывод в консоль для примера\r\n  },\r\n});\r\n"],"mappings":"AAAA,IAAAA,QAAA,GAAmBC,OAAO,CAAC,mBAAmB,CAAC;EAAvCC,MAAM,GAAAF,QAAA,CAANE,MAAM;AAEd,IAAMC,WAAW,GAAG,gBAAgB;AAEpC,OAAO,IAAMC,GAAG,GAAGF,MAAM,CAACG,YAAY,CAAC;EACrCC,SAAS,EAAE,SAAAA,UAAAC,IAAA,EAAwB;IAAA,IAArBC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAC1B,IAAMC,UAAU,SAAO,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,WAAMJ,KAAK,UAAKC,OAAO,OAAI;IAI1EI,OAAO,CAACT,GAAG,CAACM,UAAU,CAAC;EACzB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}